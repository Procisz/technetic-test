const { writeFile, existsSync, mkdirSync } = require('fs');
const { argv } = require('yargs');

require('dotenv').config();
const environment = argv.environment || 'staging';

function writeFileUsingFS(targetPath: any, environmentFileContent: any) {
  writeFile(targetPath, environmentFileContent, (error: any) => {
    if (error) console.error(error);

    if (environmentFileContent !== '') console.log(`Wrote variables to ${targetPath}.`);
  });
}

// Providing path to the `environments` directory.
const envDirectory = './src/environments';

// Creates the `environments` directory if it does not exist.
if (!existsSync(envDirectory)) {
  mkdirSync(envDirectory);
}

// Creates the `environment.prod.ts` and `environment.ts` file if it does not exist.
writeFileUsingFS('./src/environments/environment.prod.ts', '');
writeFileUsingFS('./src/environments/environment.ts', '');

// Checks whether command line argument of `prod` was provided signifying production mode
let isProduction: boolean = false;
let apiURL: string | undefined = '';

switch (environment) {
  case 'dev':
    isProduction = false;
    apiURL = process.env.API_URL_DEV;
    break;

  case 'prod':
    isProduction = true;
    apiURL = process.env.API_URL_PROD;
    break;
}

// Choose the correct targetPath based on the environment chosen.
const targetPath = isProduction ? './src/environments/environment.prod.ts' : './src/environments/environment.ts';

// Actual content to be compiled dynamically and pasted into respective environment files.
const environmentFileContent = `
/** **********
* NOTE
* This file was autogenerated by dynamically running setEnv.ts and using dotenv for managing API key secrecy.
********** **/

  export const environment: {} = {
    production: ${isProduction},
    API_URL: '${apiURL}',
  };
`;

// Appending data into the target file
writeFileUsingFS(targetPath, environmentFileContent);
